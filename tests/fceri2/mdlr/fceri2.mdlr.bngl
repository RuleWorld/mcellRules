begin model
begin parameters
	ITERATIONS  3000
	TIME_STEP  5e-06
	VACANCY_SEARCH_DISTANCE  100
	TEMPERATURE  298.15
	Nav  6.022e8               # Avogadro number based on a volume size of 1 cubic um */
	rxn_layer_t  0.01
	vol_wall  0.88/rxn_layer_t  #Surface area*/
	vol_EC  39
	vol_PM  0.01/rxn_layer_t  #Surface area*/
	vol_CP  1
	Lig_tot  6.0e3
	Rec_tot  4.0e2
	Lyn_tot  2.8e2
	Syk_tot  4e2
	kp1  0.000166057788110262*Nav
	km1  0.00
	kp2  1.66057788110262e-06/rxn_layer_t
	km2  0.00
	kpL  0.0166057788110262/rxn_layer_t
	kmL  20
	kpLs  0.0166057788110262/rxn_layer_t
	kmLs  0.12
	kpS  0.0166057788110262*Nav
	kmS  0.13
	pLb  30
	pLbs  100
	pLg  1
	pLgs  3
	pLS  30
	pLSs  100
	pSS  100
	pSSs  200
	dm  0.1
	dc  0.1
	T  298.15      # Temperature, K */
	h  rxn_layer_t      # Thickness of 2D compartment, um */
	Rs  0.002564      # Radius of a (spherical) molecule in 3D compartment, um */
	Rc  0.0015      # Radius of a (cylindrical) molecule in 2D compartment, um */
	gamma  0.5722      # Euler's constant */
	KB  1.3806488e-19     # Boltzmann constant, cm^2.kg/K.s^2 */
	mu_wall  1e-9      # Viscosity in compartment wall, kg/um.s */
	mu_EC  1e-9      # Viscosity in compartment EC, kg/um.s */
	mu_PM  1e-9      # Viscosity in compartment PM, kg/um.s */
	mu_CP  1e-9      # Viscosity in compartment CP, kg/um.s */
end parameters
begin molecule types
	Lig(l,l)
	Lyn(SH2,U)
	Syk(a~Y~pY,l~Y~pY,tSH2)
	Rec(b~Y~pY,g~Y~pY,a)
end molecule types
begin compartments
	EC 3 1
	PM 2 1 EC
	CP 3 1 PM
end compartments
begin seed species
	 @EC::Lig(l,l)  Lig_tot
	 @PM::Lyn(SH2,U)  Lyn_tot
	 @CP::Syk(a~Y,l~Y,tSH2)  Syk_tot
	 @PM::Rec(a,b~Y,g~Y)  Rec_tot
end seed species
begin observables
	Species LynFree Lyn(SH2,U)
	Species RecPbeta Rec(b~pY!?)
	Species RecMon Lig(l!1,l).Rec(a!1)
	Species RecDim Lig(l!1,l!2).Rec(a!1).Rec(a!2)
	Species RecRecLigLyn Rec(a!1,b).Lig(l!1,l!2).Rec(a!2,b!3).Lyn(SH2,U!3)
	Species RecPgamma Rec(g~pY), Rec(g~pY!+)
	Species RecSyk Syk(tSH2!1).Rec(g~pY!1)
	Species RecSykPS Syk(a~pY,tSH2!1).Rec(g~pY!1)
end observables
begin reaction rules
	Rec(a) + Lig(l,l) <-> Lig(l!1,l).Rec(a!1) kp1,km1
	Rec(a) + Lig(l,l!+) <-> Lig(l!2,l!+).Rec(a!2) kp2,km2
	Rec(b~Y) + Lyn(SH2,U) <-> Lyn(SH2,U!1).Rec(b~Y!1) kpL,kmL
	Rec(a!1,b~Y).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3) -> Rec(a!1,b~pY).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3) pLb
	Rec(a!1,g~Y).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3) -> Rec(a!1,g~pY).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3) pLg
	Rec(b~pY) + Lyn(SH2,U) <-> Lyn(SH2!1,U).Rec(b~pY!1) kpLs,kmLs
	Rec(a!1,b~Y).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U) -> Rec(a!1,b~pY).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U) pLbs
	Rec(a!1,g~Y).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U) -> Rec(a!1,g~pY).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U) pLgs
	Rec(g~pY) + Syk(tSH2) <-> Syk(tSH2!1).Rec(g~pY!1) kpS,kmS
	Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3).Syk(l~Y,tSH2!4) -> Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,b~Y!3).Lyn(SH2,U!3).Syk(l~pY,tSH2!4) pLS
	Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U).Syk(l~Y,tSH2!4) -> Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,b~pY!3).Lyn(SH2!3,U).Syk(l~pY,tSH2!4) pLSs
	Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,g~pY!3).Syk(a~Y,tSH2!3).Syk(a~Y,tSH2!4) -> Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,g~pY!3).Syk(a~Y,tSH2!3).Syk(a~pY,tSH2!4) pSS
	Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,g~pY!3).Syk(a~pY,tSH2!3).Syk(a~Y,tSH2!4) -> Rec(a!1,g~pY!4).Lig(l!1,l!2).Rec(a!2,g~pY!3).Syk(a~pY,tSH2!3).Syk(a~pY,tSH2!4) pSSs
	Rec(b~pY) -> Rec(b~Y) dm
	Rec(g~pY) -> Rec(g~Y) dm
	Syk(l~pY,tSH2!+) -> Syk(l~Y,tSH2!+) dm
	Syk(a~pY,tSH2!+) -> Syk(a~Y,tSH2!+) dm
	Syk(l~pY,tSH2) -> Syk(l~Y,tSH2) dc
	Syk(a~pY,tSH2) -> Syk(a~Y,tSH2) dc
end reaction rules
end model
generate_network({overwrite=>1})
writeSBML()
